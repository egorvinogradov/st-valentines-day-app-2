{
  "version": 3,
  "file": "app.js",
  "sourceRoot": "",
  "sources": [
    "app.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "People = new Meteor.Collection \"people\"\n\n#People.allow\n#    insert: ->\n#        true\n#    update: ->\n#        true\n\n\n#Meteor.users.allow\n#    remove: ->\n#        true\n\n\nApp =\n\n    selectors:\n        person: \".people__person\"\n        searchInput: \".people__search-input\"\n        loveButton: \".people__love-button\"\n        unloveButton: \".people__unlove-button\"\n        saveButton: \".account__save\"\n        firstNameInput: \".account__first-name-input\"\n        lastNameInput: \".account__last-name-input\"\n        photoInput: \".account__photo-input\"\n        facebookInput: \".account__facebook-input\"\n        accountModal: \"#account\"\n\n    MAX_LOVED_COUNT: 5\n\n    nameSearchQuery: \"\"\n    peopleListUpdateCounter: 0\n\n    initialize: (collection) ->\n        console.log \"Initialized app\", collection\n        @collection = collection\n        @initializeTemplates()\n        @attachEvents()\n\n    attachEvents: ->\n        peopleEvents = {}\n        peopleEvents[\"click #{@selectors.loveButton}\"] = $.proxy @onLoveButtonClick, @\n        peopleEvents[\"click #{@selectors.unloveButton}\"] = $.proxy @onUnloveButtonClick, @\n        peopleEvents[\"keyup #{@selectors.searchInput}\"] = $.proxy @onSearchInputKeyup, @\n\n        headerEvents = {}\n        headerEvents[\"click #{@selectors.saveButton}\"] = $.proxy @onSaveButtonClick, @\n\n        Template.people.events peopleEvents\n        Template.header.events headerEvents\n\n    initializeTemplates: ->\n        Template.header.currentPerson = $.proxy @getTemplateCurrentPerson, @\n        Template.peopleList.lastUpdate = $.proxy @getTemplateLastUpdate, @\n        Template.peopleList.peopleList = $.proxy @getTemplatePeopleList, @\n        Template.notifications.notifications = $.proxy @getTemplateNotifications, @\n        Template.notifications.currentPerson = $.proxy @getTemplateCurrentPerson, @\n\n    getPerson: (userId) ->\n        @collection.findOne userId: userId\n\n    getCurrentPerson: ->\n        @getPerson Meteor.userId()\n\n    getPeopleWhoLovePerson: (username) ->\n        currentPerson = @collection.findOne username: username\n        people = []\n        @collection.find().forEach (person) ->\n            if currentPerson.username isnt person.username\n                if currentPerson.username in person.loved\n                    people.push(person)\n        people\n\n    getUsernameByEventObject: (e) ->\n        $(e.currentTarget)\n            .parents(@selectors.person)\n            .data(\"username\")\n\n    getLovedByCount: (username) ->\n        @getPeopleWhoLovePerson(username).length #TODO: add +1 later\n\n    getTemplateLastUpdate: ->\n        Session.get \"lastUpdate\"\n\n    getTemplatePeopleSearch: ->\n        query: @nameSearchQuery\n\n    getTemplatePeopleList: ->\n\n        currentPerson = @getCurrentPerson()\n        currentPersonTemplateData = null\n        people = []\n\n        if @nameSearchQuery\n            searchQueryWords = @nameSearchQuery.split(/\\s+/)\n\n        @collection.find({}, sort: firstName: 1).forEach (person) =>\n\n            templateData = {}\n            if currentPerson\n\n                templateData =\n                    isLoved: person.username in currentPerson.loved\n                    loggedIn: true\n                    lovedBy: @getLovedByCount person.username\n\n                if currentPerson.userId is person.userId\n                    templateData.isCurrentUser = true\n                    currentPersonTemplateData = _.extend(templateData, person)\n                else\n                    people.push _.extend(templateData, person)\n\n            else\n                templateData =\n                    loggedIn: false\n                    lovedBy: @getLovedByCount person.username\n                people.push _.extend(templateData, person)\n\n        if @nameSearchQuery\n            people = people.filter (person) =>\n                name = person.firstName + \" \" + person.lastName\n                _.find name.split(/\\s+/), (nameWord) =>\n                    _.find searchQueryWords, (searchQueryWord) =>\n                        nameWord.toLowerCase().indexOf(searchQueryWord.toLowerCase()) is 0\n\n        people.unshift currentPersonTemplateData\n        people\n\n    getTemplateCurrentPerson: ->\n        currentPerson = @getCurrentPerson()\n        if currentPerson\n            lovedBy = @getLovedByCount currentPerson.username\n            _.extend lovedBy: lovedBy, currentPerson\n\n    getTemplateNotifications: ->\n        currentPerson = @getCurrentPerson()\n        if currentPerson\n            if currentPerson.username.toLowerCase() in [\"egorvinogradov.ru\", \"elizabeth76\"] # TODO: remove\n                peopleWhoLoveCurrentPerson = @getPeopleWhoLovePerson currentPerson.username\n                peopleIdsWhoLoveCurrentPerson = _.pluck(peopleWhoLoveCurrentPerson, \"username\")\n                intersectionIds = _.intersection peopleIdsWhoLoveCurrentPerson, currentPerson.loved\n                _.map intersectionIds, (username) =>\n                    @collection.findOne username: username\n\n    onLoveButtonClick: (e) ->\n\n        currentPerson = @getCurrentPerson()\n        username = @getUsernameByEventObject(e)\n\n        if username isnt currentPerson.username\n            loved = currentPerson.loved\n            unless loved.length >= @MAX_LOVED_COUNT\n                loved.push(username)\n                query = _id: currentPerson._id\n                @collection.update query, $set:\n                    loved: loved\n                console.log(\"Loved\", username)\n\n    onUnloveButtonClick: (e) ->\n        currentPerson = @getCurrentPerson()\n        username = @getUsernameByEventObject(e)\n        if username isnt currentPerson.username\n            loved = currentPerson.loved\n            loved = _.without(loved, username)\n            query = _id: currentPerson._id\n            @collection.update query, $set:\n                loved: loved\n            console.log(\"Unloved\", username)\n\n    onSaveButtonClick: (e) ->\n        e.preventDefault()\n        e.stopPropagation()\n        values =\n            firstName: $.trim $(@selectors.firstNameInput).val()\n            lastName: $.trim $(@selectors.lastNameInput).val()\n            photo: $.trim $(@selectors.photoInput).val()\n            facebook: $.trim $(@selectors.facebookInput).val()\n        query = _id: @getCurrentPerson()._id\n        $(@selectors.accountModal).modal \"hide\"\n\n        setTimeout =>\n            @collection.update query, $set: values\n        , 500\n\n    onSearchInputKeyup: (e) ->\n        @nameSearchQuery = $.trim $(e.currentTarget).val()\n        Session.set \"lastUpdate\", new Date()\n\n    _generatePeople: (userList) ->\n       userList.forEach (user) ->\n           People.insert\n               firstName: user[1]\n               lastName: user[0]\n               email: user[2]\n               username: user[2].split(\"@\")[0]\n               about: \"\"\n               loved: []\n               photo: \"\"\n               userId: \"\"\n               facebook: \"\"\n               activated: false\n\n\n\nif Meteor.isClient\n    App.initialize(People)\n\n\n\nif Meteor.isServer\n    Accounts.onCreateUser (options, user) ->\n        currentPerson = People.findOne(email: options.email)\n        if currentPerson\n            console.log(\"Activated user\", options.email, user._id, currentPerson.name)\n            query = _id: currentPerson._id\n            People.update query, $set:\n                activated: true\n                userId: user._id\n        else\n            console.log(\"Can't find user with email\", options.email)\n            user.emails[0].address = \"Invalid email\"\n        user\n"
  ]
}